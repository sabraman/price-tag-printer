// TypeScript bot development script
// Run with: pnpm tsx scripts/bot-dev.ts

import { config } from "dotenv";
import path from "path";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Load environment variables from .env.local
config({ path: path.join(__dirname, "..", ".env.local") });

console.log("üîß Environment loaded:");
console.log("- NODE_ENV:", process.env.NODE_ENV);
console.log(
	"- TELEGRAM_BOT_TOKEN:",
	process.env.TELEGRAM_BOT_TOKEN ? "Present" : "Missing",
);

// Import bot and handlers
import { bot } from "../src/lib/telegram/bot.js";
import "../src/lib/telegram/commands/start.js";
import "../src/lib/telegram/handlers/main-menu.js";
import "../src/lib/telegram/handlers/items.js";

async function startBot() {
	try {
		console.log("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...");
		console.log("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏\n");

		// Graceful shutdown
		process.once("SIGINT", () => {
			console.log("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...");
			bot.stop();
			process.exit(0);
		});

		process.once("SIGTERM", () => {
			console.log("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...");
			bot.stop();
			process.exit(0);
		});

		// Start bot with polling
		await bot.start({
			onStart: (botInfo) => {
				console.log(`‚úÖ –ë–æ—Ç @${botInfo.username} –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!`);
				console.log(`üë§ ID –±–æ—Ç–∞: ${botInfo.id}`);
				console.log("üí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –±–æ—Ç—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏\n");
			},
		});
	} catch (error) {
		console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:", error);

		if (error && typeof error === 'object' && 'message' in error && typeof error.message === 'string' && error.message.includes("401")) {
			console.error(
				"üîë –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å TELEGRAM_BOT_TOKEN –≤ .env.local",
			);
		}

		process.exit(1);
	}
}

startBot();
