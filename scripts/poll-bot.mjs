// Script for local bot development using polling
// Run with: tsx scripts/poll-bot.js

import { config } from "dotenv";
import path from "path";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Load environment variables
config({ path: path.join(__dirname, "..", ".env.local") });

async function startBot() {
	try {
		console.log("ü§ñ –ó–∞–≥—Ä—É–∑–∫–∞ –±–æ—Ç–∞...");

		// Import the bot after env vars are loaded - this will also register all handlers
		const { bot } = await import("../dist/lib/telegram/bot.js");

		// Import all handlers to register them
		await import("../dist/lib/telegram/commands/start.js");
		await import("../dist/lib/telegram/handlers/main-menu.js");
		await import("../dist/lib/telegram/handlers/items.js");

		console.log("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã");

		// Start bot with polling
		console.log("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling...");
		console.log("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏");

		// Graceful shutdown
		process.once("SIGINT", () => {
			console.log("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...");
			bot.stop();
			process.exit(0);
		});

		process.once("SIGTERM", () => {
			console.log("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...");
			bot.stop();
			process.exit(0);
		});

		// Start polling
		await bot.start({
			onStart: (botInfo) => {
				console.log(`‚úÖ –ë–æ—Ç @${botInfo.username} –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!`);
				console.log(`üë§ ID –±–æ—Ç–∞: ${botInfo.id}`);
				console.log("üí¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –±–æ—Ç—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏");
			},
		});
	} catch (error) {
		console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:", error);

		if (error.message.includes("401")) {
			console.error(
				"üîë –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å TELEGRAM_BOT_TOKEN –≤ .env.local",
			);
		}

		process.exit(1);
	}
}

startBot();
