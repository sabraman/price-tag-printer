import { bold, fmt } from "@grammyjs/parse-mode";
import { bot } from "../bot";
import {
	createDesignMenuKeyboard,
	createItemsMenuKeyboard,
	createMainMenuKeyboard,
	createSettingsMenuKeyboard,
} from "../keyboards";
import { escapeMarkdown } from "../utils/markdown";

// Back to main menu handler
bot.callbackQuery("back_to_main", async (ctx) => {
	await ctx.answerCallbackQuery();

	// Reset session mode
	ctx.session.mode = "main";
	ctx.session.editingItemId = undefined;
	ctx.session.awaitingInput = false;

	const mainMessage = fmt`
${bold}üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é${bold}

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
	`;

	await ctx.editMessageText(escapeMarkdown(mainMessage.toString()), {
		reply_markup: createMainMenuKeyboard(),
		parse_mode: "MarkdownV2",
	});
});

// Items menu handler
bot.callbackQuery("menu_items", async (ctx) => {
	await ctx.answerCallbackQuery();

	ctx.session.mode = "edit_items";
	const itemsCount = ctx.session.items.length;

	const itemsMessage = fmt`
${bold}üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏${bold}

${itemsCount > 0 ? `–¢–æ–≤–∞—Ä–æ–≤ –≤ —Å–ø–∏—Å–∫–µ: ${itemsCount}` : "–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç"}

${
	itemsCount > 0
		? "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫, –≤–æ–π—Ç–∏ –≤ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã."
		: "–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ Excel —Ñ–∞–π–ª —Å —Ç–æ–≤–∞—Ä–∞–º–∏."
}
	`;

	await ctx.editMessageText(escapeMarkdown(itemsMessage.toString()), {
		reply_markup: createItemsMenuKeyboard(itemsCount),
		parse_mode: "MarkdownV2",
	});
});

// Design menu handler
bot.callbackQuery("menu_design", async (ctx) => {
	await ctx.answerCallbackQuery();

	ctx.session.mode = "edit_themes";

	const designMessage = fmt`
${bold}üé® –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∏–∑–∞–π–Ω–∞${bold}

–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
‚Ä¢ –¢–µ–º–∞: ${ctx.session.designType}
‚Ä¢ –°–∫–∏–¥–∫–∏: ${ctx.session.design ? "–≤–∫–ª—é—á–µ–Ω—ã" : "–≤—ã–∫–ª—é—á–µ–Ω—ã"}
‚Ä¢ –†–∞–∑–º–µ—Ä —Å–∫–∏–¥–∫–∏: ${ctx.session.discountAmount}‚ÇΩ
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç: ${ctx.session.maxDiscountPercent}%
‚Ä¢ –®—Ä–∏—Ñ—Ç: ${ctx.session.currentFont}

–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –≤–∞—à–∏—Ö —Ü–µ–Ω–Ω–∏–∫–æ–≤:
	`;

	await ctx.editMessageText(escapeMarkdown(designMessage.toString()), {
		reply_markup: createDesignMenuKeyboard(),
		parse_mode: "MarkdownV2",
	});
});

// Settings menu handler
bot.callbackQuery("menu_settings", async (ctx) => {
	await ctx.answerCallbackQuery();

	ctx.session.mode = "edit_settings";

	const settingsMessage = fmt`
${bold}‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏${bold}

–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:

‚Ä¢ –¢–æ–≤–∞—Ä–æ–≤: ${ctx.session.items.length}
‚Ä¢ –†–µ–∂–∏–º –¥–∏–∑–∞–π–Ω–∞: ${ctx.session.designType}
‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –º–µ—Ç–∫–∏: ${ctx.session.showThemeLabels ? "–¥–∞" : "–Ω–µ—Ç"}
‚Ä¢ –¶–≤–µ—Ç –ª–∏–Ω–∏–π –æ—Ç—Ä–µ–∑–∞: ${ctx.session.cuttingLineColor}
	`;

	await ctx.editMessageText(escapeMarkdown(settingsMessage.toString()), {
		reply_markup: createSettingsMenuKeyboard(),
		parse_mode: "MarkdownV2",
	});
});

// PDF generation handler
bot.callbackQuery("generate_pdf", async (ctx) => {
	await ctx.answerCallbackQuery();

	if (ctx.session.items.length === 0) {
		await ctx.editMessageText(
			'‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å PDF: —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç.\n\n–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã —á–µ—Ä–µ–∑ –º–µ–Ω—é "üì¶ –¢–æ–≤–∞—Ä—ã".',
			{
				reply_markup: createMainMenuKeyboard(),
			},
		);
		return;
	}

	// Show progress message
	const progressMsg = await ctx.editMessageText(
		"‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é PDF —Ñ–∞–π–ª...\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.",
	);

	try {
		// Generate PDF using web app API
		const response = await fetch(
			`${process.env.NEXT_PUBLIC_APP_URL || process.env.VERCEL_URL || "http://localhost:3000"}/api/generate-pdf`,
			{
				method: "POST",
				headers: {
					"Content-Type": "application/json",
				},
				body: JSON.stringify({
					items: ctx.session.items,
					settings: {
						design: ctx.session.design,
						designType: ctx.session.designType,
						discountAmount: ctx.session.discountAmount,
						maxDiscountPercent: ctx.session.maxDiscountPercent,
						themes: ctx.session.themes,
						currentFont: ctx.session.currentFont,
						discountText: ctx.session.discountText,
						showThemeLabels: ctx.session.showThemeLabels,
						cuttingLineColor: ctx.session.cuttingLineColor,
					},
				}),
			},
		);

		if (!response.ok) {
			throw new Error("–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ");
		}

		const result = await response.json();

		if (!result.success) {
			throw new Error(result.error || "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å PDF —Ñ–∞–π–ª");
		}

		// For now, send a success message since we don't have actual PDF file yet
		await ctx.editMessageText(
			escapeMarkdown(
				fmt`
‚úÖ ${bold}PDF —Ñ—É–Ω–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!${bold}

üìÑ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${result.itemCount || ctx.session.items.length}
üé® –¢–µ–º–∞: ${ctx.session.designType}
üí∞ –°–∫–∏–¥–∫–∏: ${ctx.session.design ? "–≤–∫–ª—é—á–µ–Ω—ã" : "–≤—ã–∫–ª—é—á–µ–Ω—ã"}

üí° PDF –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ—Ç–æ–≤—ã—Ö PDF —Ñ–∞–π–ª–æ–≤
				`.toString(),
			),
			{
				reply_markup: createMainMenuKeyboard(),
				parse_mode: "MarkdownV2",
			},
		);
	} catch (error) {
		console.error("PDF generation error:", error);

		// Delete progress message
		try {
			if (
				ctx.chat?.id &&
				typeof progressMsg !== "boolean" &&
				progressMsg.message_id
			) {
				await ctx.api.deleteMessage(ctx.chat.id, progressMsg.message_id);
			}
		} catch {}

		await ctx.reply(
			`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF:\n\n${error instanceof Error ? error.message : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"}\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`,
			{
				reply_markup: createMainMenuKeyboard(),
			},
		);
	}
});
